#!/bin/bash
# TODO: print messages only if some config file exist

function init_module() {
    CONKY_ENABLE_DEFAULT="true"
    CONKY_CONFIG_FILES_DEFAULT="${HOME}/.conkyrc"
    CONKY_RESTART_COMMAND_DEFAULT=""

    CONKY_ENABLE="$(crudini          --get ${GCS_CONFIG_FILE} conky enable          2>/dev/null || echo "${CONKY_ENABLE_DEFAULT}")"
    CONKY_CONFIG_FILES="$(crudini    --get ${GCS_CONFIG_FILE} conky config_files    2>/dev/null || echo "${CONKY_CONFIG_FILES_DEFAULT}")"
    CONKY_RESTART_COMMAND="$(crudini --get ${GCS_CONFIG_FILE} conky restart_command 2>/dev/null || echo "${CONKY_RESTART_COMMAND_DEFAULT}")"
}



function check_dependencies() {
    if ! which conky >/dev/null; then
        return 1

    elif ! [ "${CONKY_ENABLE}" == "true" ]; then
        printf "* Ignoring conky (disabled from configuration).\n"
        return 1

    else
        return 0

    fi
}



function derive_colors() {
    : ${conky_default_color:=${wallpaper_text_color}}
    : ${conky_shade_color:=${wallpaper_shadow_color}}
    : ${conky_own_window_colour:=${wallpaper_bg_color}}

    #
    # color0 through color9 can be set in the theme or in the configuration file.
    # The configuration file takes precedence. In both cases, other variables can be referenced (e.g. $text_color).
    # By default, no default color is assumed/modified, since the meaning of the colors depends on the specific
    # conky configuration
    #
    eval conky_color0="$(crudini --get ${GCS_CONFIG_FILE} conky color0 2>/dev/null || echo "${conky_color0}" )"
    eval conky_color1="$(crudini --get ${GCS_CONFIG_FILE} conky color1 2>/dev/null || echo "${conky_color1}" )"
    eval conky_color2="$(crudini --get ${GCS_CONFIG_FILE} conky color2 2>/dev/null || echo "${conky_color2}" )"
    eval conky_color3="$(crudini --get ${GCS_CONFIG_FILE} conky color3 2>/dev/null || echo "${conky_color3}" )"
    eval conky_color4="$(crudini --get ${GCS_CONFIG_FILE} conky color4 2>/dev/null || echo "${conky_color4}" )"
    eval conky_color5="$(crudini --get ${GCS_CONFIG_FILE} conky color5 2>/dev/null || echo "${conky_color5}" )"
    eval conky_color6="$(crudini --get ${GCS_CONFIG_FILE} conky color6 2>/dev/null || echo "${conky_color6}" )"
    eval conky_color7="$(crudini --get ${GCS_CONFIG_FILE} conky color7 2>/dev/null || echo "${conky_color7}" )"
    eval conky_color8="$(crudini --get ${GCS_CONFIG_FILE} conky color8 2>/dev/null || echo "${conky_color8}" )"
    eval conky_color9="$(crudini --get ${GCS_CONFIG_FILE} conky color9 2>/dev/null || echo "${conky_color9}" )"
}



function create_backup() {
    printf "* Making backup of conky configuration files...\n"

    local CONKY_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/conky"
    mkdir -p "${CONKY_BACKUP_DIR}"

    for conky_config_file in ${CONKY_CONFIG_FILES}; do
        conky_config_file="$(echo "${conky_config_file}" | tr -d '"')"
        printf "  \"${conky_config_file}\"..."

        local conky_config_file_path="${conky_config_file%/*}"
        mkdir -p "${CONKY_BACKUP_DIR}/${conky_config_file_path}"
        cp "${conky_config_file}" "${CONKY_BACKUP_DIR}/${conky_config_file_path}"
        printf " done.\n"
    done
}



function restore_backup() {
    printf "* Restoring backup of conky configuration files..."

    local CONKY_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/conky"

    for conky_config_file in ${CONKY_CONFIG_FILES}; do
        conky_config_file="$(echo "${conky_config_file}" | tr -d '"')"
        printf "  \"${conky_config_file}\"..."

        if [ -f "${CONKY_BACKUP_DIR}/${conky_config_file}" ]; then
            cp "${CONKY_BACKUP_DIR}/${conky_config_file}" "${conky_config_file}"
            printf " done.\n"
        else
            printf " not found!\n"
        fi
    done

    ${CONKY_RESTART_COMMAND} &>/dev/null
}



function dry_run() {
    printf "* conky: set text, background, and possibly other colors in the following files:\n"

    for conky_config_file in ${CONKY_CONFIG_FILES}; do
        conky_config_file="$(echo "${conky_config_file}" | tr -d '"')"
        printf "  \"${conky_config_file}\"\n"
    done
}



function print_module_help() {
    echo "Help for GCS ${BASH_SOURCE##*/} module"
    echo
    echo "This module sets colors for conky. This is accomplished by modifiying the configuration file(s), so it is recommended that conky is restarted after this module is used."
    echo
    echo "Multiple configuration files can be specified via the GCS configuration file. For example, to use \"/home/user/.conkyrc1\" and \"/home/user/.conkyrc2\", write the following in \"${GCS_CONFIG_FILE}\":"
    echo
    echo "    ..."
    echo "    [conky]"
    echo "    config_files=\"/home/user/.conkyrc1\" \"/home/user/.conkyrc2\""
    echo "    ..."
    echo
    echo "Background and text colors are set automatically according to the theme. Instead, the mapping for color0 through color9 should be set by the user in the GCS configuration file. For example, to assign the value of \$selected_bg_color to color0, write the following in \"${GCS_CONFIG_FILE}\":"
    echo
    echo "    ..."
    echo "    [conky]"
    echo "    color0=\${selected_bg_color}"
    echo "    ..."
    echo
    echo "Backup and restore are supported."
    echo
}



function apply_theme() {
    printf "* Setting colors for conky...\n"

    local CONKY_TMP_DIR="${GCS_TMP_DIR}/conky"
    local CONKY_TMP_FILE="${CONKY_TMP_DIR}/conkyrc"
    mkdir "${CONKY_TMP_DIR}"

    for conky_config_file in ${CONKY_CONFIG_FILES}; do
        conky_config_file="$(echo "${conky_config_file}" | tr -d '"')"

        printf "  \"${conky_config_file}\"..."
        if [ -f "${conky_config_file}" ]; then

            cp "${conky_config_file}" "${CONKY_TMP_FILE}"

            set_value "default_color"       " = "  "'${conky_default_color}',"     "${CONKY_TMP_FILE}"
            set_value "default_shade_color" " = "  "'${conky_shade_color}',"       "${CONKY_TMP_FILE}"
            set_value "own_window_colour"   " = "  "'${conky_own_window_colour}'," "${CONKY_TMP_FILE}"

            [ -z "${conky_color0}" ] || set_value "color0" " = " "'${conky_color0}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color1}" ] || set_value "color1" " = " "'${conky_color1}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color2}" ] || set_value "color2" " = " "'${conky_color2}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color3}" ] || set_value "color3" " = " "'${conky_color3}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color4}" ] || set_value "color4" " = " "'${conky_color4}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color5}" ] || set_value "color5" " = " "'${conky_color5}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color6}" ] || set_value "color6" " = " "'${conky_color6}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color7}" ] || set_value "color7" " = " "'${conky_color7}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color8}" ] || set_value "color8" " = " "'${conky_color8}'," "${CONKY_TMP_FILE}"
            [ -z "${conky_color9}" ] || set_value "color9" " = " "'${conky_color9}'," "${CONKY_TMP_FILE}"

            mv "${CONKY_TMP_FILE}" "${conky_config_file}"

            printf " done.\n"
        else
            printf " not found!\n"
        fi
    done

    ${CONKY_RESTART_COMMAND} &>/dev/null
}

