#!/bin/bash

function init_module() {
    TERMINATOR_ENABLE_DEFAULT="true"
    TERMINATOR_CONFIG_FILE_DEFAULT="$HOME/.config/terminator/config"

    TERMINATOR_ENABLE="$(crudini      --get ${GCS_CONFIG_FILE} terminator enable      2>/dev/null || echo "${TERMINATOR_ENABLE_DEFAULT}")"
    TERMINATOR_CONFIG_FILE="$(crudini --get ${GCS_CONFIG_FILE} terminator config_file 2>/dev/null || echo "${TERMINATOR_CONFIG_FILE_DEFAULT}")"
}



function check_dependencies() {
    if ! which terminator >/dev/null; then
        return 1

    elif ! [ "${TERMINATOR_ENABLE}" == "true" ]; then
        printf "* Ignoring Terminator (disabled from configuration).\n"
        return 1

    elif ! [ -f "${TERMINATOR_CONFIG_FILE}" ]; then
        printf "* Ignoring Terminator (configuration file ${TERMINATOR_CONFIG_FILE} not found).\n"
        return 1

    else
        return 0

    fi
}



function derive_colors() {
    : ${terminator_bg_color:=${terminal_bg_color}}
    : ${terminator_fg_color:=${terminal_fg_color}}
    : ${terminator_cursos_color:=${selected_fg_color}}
    : ${terminator_palette:=${terminal_palette_black}:${terminal_palette_red}:${terminal_palette_green}:${terminal_palette_yellow}:${terminal_palette_blue}:${terminal_palette_purple}:${terminal_palette_cyan}:${terminal_palette_white}:${terminal_palette_light_black}:${terminal_palette_light_red}:${terminal_palette_light_green}:${terminal_palette_light_yellow}:${terminal_palette_light_blue}:${terminal_palette_light_purple}:${terminal_palette_light_cyan}:${terminal_palette_light_white}}
    : ${terminator_transparency:=${terminal_transparency}}
}



function create_backup() {
    printf "* Making backup of terminator configuration file..."

    TERMINATOR_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/terminator"
    mkdir -p "${TERMINATOR_BACKUP_DIR}"
    cp "${TERMINATOR_CONFIG_FILE}" "${TERMINATOR_BACKUP_DIR}/config"

    printf " done.\n"
}



function restore_backup() {
    printf "* Restoring backup of terminator configuration file..."

    TERMINATOR_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/terminator"
    if [ -f "${TERMINATOR_BACKUP_DIR}/config" ]; then
        cp "${TERMINATOR_BACKUP_DIR}/config" "${TERMINATOR_CONFIG_FILE}"
        printf " done.\n"
    else
        printf " not found!\n"
    fi
}



function apply_theme() {
    printf "* Setting colors for terminator..."

    TERMINATOR_TMP_DIR="${GCS_TMP_DIR}/terminator"
    TERMINATOR_TMP_CONFIG_FILE="${TERMINATOR_TMP_DIR}/config"
    mkdir "${TERMINATOR_TMP_DIR}"
    cp "${TERMINATOR_CONFIG_FILE}" "${TERMINATOR_TMP_CONFIG_FILE}"

    terminator_set_value_default_profile "background_color" "${terminal_bg_color}"  "${TERMINATOR_TMP_CONFIG_FILE}"
    terminator_set_value_default_profile "foreground_color" "${terminal_fg_color}"  "${TERMINATOR_TMP_CONFIG_FILE}"
    terminator_set_value_default_profile "cursor_color"     "${terminal_fg_color}"  "${TERMINATOR_TMP_CONFIG_FILE}"
    terminator_set_value_default_profile "palette"          "${terminator_palette}" "${TERMINATOR_TMP_CONFIG_FILE}"
    if [ "${terminal_transparency}" != "" ]; then
        terminator_set_value_default_profile "background_type"     "transparent"              "${TERMINATOR_TMP_CONFIG_FILE}"
        terminator_set_value_default_profile "background_darkness" "${terminal_transparency}" "${TERMINATOR_TMP_CONFIG_FILE}"
    else
        terminator_set_value_default_profile "background_type"     "solid"                    "${TERMINATOR_TMP_CONFIG_FILE}"
    fi

    mv "${TERMINATOR_TMP_CONFIG_FILE}" "${TERMINATOR_CONFIG_FILE}"

    printf " done.\n"
}



# helper function to set a value under the "default" section of terminator's config file
terminator_set_value_default_profile() {

    local key="$1"
    local value="$2"
    local file="$3"

    sed -i "
    /\[profiles\]/{
    N
        /\[\[default\]\]/{
        : loop
        N
        s/${key}\ =.*/${key} = \"${value}\"/
        t endloop
        /\[\[default\]\].*\[\[/{
            s/\[\[default\]\]/\[\[default\]\]\n    ${key} = \"${value}\"/
            b endloop
        }
        b loop
        : endloop
        }
    }
    " "${file}"
}

