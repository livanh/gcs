#!/bin/bash

function init_module() {
    ROFI_ENABLE_DEFAULT="true"
    ROFI_CONFIG_FILE_DEFAULT="${HOME}/.config/rofi/config"
    ROFI_RESTART_COMMAND_DEFAULT=""

    ROFI_ENABLE="$(crudini          --get ${GCS_CONFIG_FILE} rofi enable          2>/dev/null || echo "${ROFI_ENABLE_DEFAULT}")"
    ROFI_CONFIG_FILE="$(crudini     --get ${GCS_CONFIG_FILE} rofi config_file     2>/dev/null || echo "${ROFI_CONFIG_FILE_DEFAULT}")"
    ROFI_RESTART_COMMAND="$(crudini --get ${GCS_CONFIG_FILE} rofi restart_command 2>/dev/null || echo "${ROFI_RESTART_COMMAND_DEFAULT}")"
}



function check_dependencies() {
    if ! which rofi >/dev/null; then
        return 1

    elif ! [ "${ROFI_ENABLE}" == "true" ]; then
        printf "* Ignoring rofi (disabled from configuration).\n"
        return 1

    elif ! [ -f "${ROFI_CONFIG_FILE}" ]; then
        printf "* Ignoring rofi (configuration file \"${ROFI_CONFIG_FILE}\" not found).\n"
        return 1

    else
        return 0

    fi
}



function derive_colors() {
    : ${rofi_normal_bg:=${base_color}}
    : ${rofi_normal_fg:=${text_color}}
    : ${rofi_normal_bg_alt:=${base_color}}
    : ${rofi_normal_highlight_bg:=${selected_bg_color}}
    : ${rofi_normal_highlight:=${selected_fg_color}}
    : ${rofi_urgent_bg:=${base_color}}
    : ${rofi_urgent_fg:=${text_color}}
    : ${rofi_urgent_bg_alt:=${base_color}}
    : ${rofi_urgent_highlight_bg:=${selected_bg_color}}
    : ${rofi_urgent_highlight:=${selected_fg_color}}
    : ${rofi_active_bg:=${base_color}}
    : ${rofi_active_fg:=${text_color}}
    : ${rofi_active_bg_alt:=${base_color}}
    : ${rofi_active_highlight_bg:=${selected_bg_color}}
    : ${rofi_active_highlight:=${selected_fg_color}}
    : ${rofi_window_bg_border:=${bg_color}}
    : ${rofi_window_separator:=${bg_color}}
}



function create_backup() {
    gcs_backup_file "rofi" "rofi" "${ROFI_CONFIG_FILE}"
}



function restore_backup() {
    gcs_restore_file "rofi" "rofi" "${ROFI_CONFIG_FILE}"
    ${ROFI_RESTART_COMMAND} &>/dev/null
}



function dry_run() {
    printf "* rofi: set colors in \"${ROFI_CONFIG_FILE}\".\n"
}



function print_module_help() {
    echo "Help for GCS ${BASH_SOURCE##*/} module"
    echo
    echo "This module sets colors for rofi. This is accomplished by modifiying the configuration file."
    echo
    echo "Backup and restore are supported."
    echo
}



function apply_theme() {
    printf "* Setting colors for rofi..."

    local ROFI_TMP_DIR="${GCS_TMP_DIR}/rofi"
    local ROFI_TMP_CONFIG_FILE="${ROFI_TMP_DIR}/config"
    mkdir "${ROFI_TMP_DIR}"
    cp "${ROFI_CONFIG_FILE}" "${ROFI_TMP_CONFIG_FILE}"

    set_value "rofi.color-normal" ": " "${rofi_normal_bg},${rofi_normal_fg},${rofi_normal_bg_alt},${rofi_normal_highlight_bg},${rofi_normal_highlight}" "${ROFI_TMP_CONFIG_FILE}"
    set_value "rofi.color-urgent" ": " "${rofi_urgent_bg},${rofi_urgent_fg},${rofi_urgent_bg_alt},${rofi_urgent_highlight_bg},${rofi_urgent_highlight}" "${ROFI_TMP_CONFIG_FILE}"
    set_value "rofi.color-active" ": " "${rofi_active_bg},${rofi_active_fg},${rofi_active_bg_alt},${rofi_active_highlight_bg},${rofi_active_highlight}" "${ROFI_TMP_CONFIG_FILE}"
    set_value "rofi.color-window" ": " "${rofi_window_bg_border},${rofi_window_separator}"   "${ROFI_TMP_CONFIG_FILE}"

    mv "${ROFI_TMP_CONFIG_FILE}" "${ROFI_CONFIG_FILE}"

    ${ROFI_RESTART_COMMAND} &>/dev/null

    printf " done.\n"
}

