#!/bin/bash

function init_module() {
    GEANY_ENABLE_DEFAULT="true"
    GEANY_CONFIG_FILE_DEFAULT="${HOME}/.config/geany/geany.conf"

    GEANY_ENABLE="$(crudini      --get ${GCS_CONFIG_FILE} geany enable      2>/dev/null || echo "${GEANY_ENABLE_DEFAULT}")"
    GEANY_CONFIG_FILE="$(crudini --get ${GCS_CONFIG_FILE} geany config_file 2>/dev/null || echo "${GEANY_CONFIG_FILE_DEFAULT}")"

    GCS_SYNTAX_FALLBACK_DEFAULT="true"
    GCS_SYNTAX_FALLBACK="$(crudini   --get ${GCS_CONFIG_FILE} gcs   syntax_fallback 2>/dev/null || echo "${GCS_SYNTAX_FALLBACK_DEFAULT}")"
    GEANY_SYNTAX_FALLBACK="$(crudini --get ${GCS_CONFIG_FILE} geany syntax_fallback 2>/dev/null || echo "${GCS_SYNTAX_FALLBACK}")"
}



function check_dependencies() {
    if ! which -s geany; then
        return 1

    elif ! [ "${GEANY_ENABLE}" == "true" ]; then
        printf "* Ignoring Geany (disabled from configuration).\n"
        return 1

    elif ! [ -f "${GEANY_CONFIG_FILE}" ]; then
        printf "* Ignoring Geany (configuration file \"${GEANY_CONFIG_FILE}\" not found).\n"
        return 1

    else
        return 0

    fi
}



function derive_colors() {
    : ${geany_bg:=${editor_bg}}
    : ${geany_fg:=${editor_fg}}
    : ${geany_selected_bg:=${editor_selected_bg}}
    : ${geany_selected_fg:=${editor_selected_fg}}
    : ${geany_frame_bg:=${editor_frame_bg}}
    : ${geany_frame_fg:=${editor_frame_fg}}
    : ${geany_current_line_bg:=${editor_current_line_bg}}
    : ${geany_indent_guide:=${editor_indent_guide}}

    : ${geany_number:=${editor_number}}
    : ${geany_class:=${editor_class}}
    : ${geany_string:=${editor_string}}
    : ${geany_operator:=${editor_operator}}
    : ${geany_comment:=${editor_comment}}
    : ${geany_error:=${editor_error}}
    : ${geany_keyword:=${editor_keyword}}
    : ${geany_character:=${editor_character}}
    : ${geany_preprocessor:=${editor_preprocessor}}
    : ${geany_brace_good:=${editor_brace_good}}
    : ${geany_white_space:=${editor_white_space}}

    : ${geany_margin_folding_bg:=${editor_frame_bg}}
    : ${geany_margin_folding_fg:=${editor_frame_fg}}
    : ${geany_fold_symbol_highlight:=${editor_frame_bg}}
    : ${geany_marker_search_bg:=${editor_selected_bg}}
    : ${geany_marker_search_fg:=${editor_selected_fg}}
    : ${geany_marker_mark_bg:=${editor_frame_bg}}
    : ${geany_marker_mark_fg:=${editor_frame_fg}}
    : ${geany_type:=${editor_section_header}}
    : ${geany_function_bg:=${editor_bg}}
    : ${geany_function_fg:=${editor_class}}
    : ${geany_parameter_bg:=${editor_bg}}
    : ${geany_parameter_fg:=${editor_class}}
    : ${geany_here_doc_bg:=${editor_bg}}
    : ${geany_here_doc_fg:=${editor_string}}

    : ${geany_diff_added:=${editor_diff_added}}
    : ${geany_diff_removed:=${editor_diff_removed}}
    : ${geany_diff_changed:=${editor_diff_changed}}
}



function create_backup() {
    gcs_backup_file "Geany" "geany" "${GEANY_CONFIG_FILE}"
}



function restore_backup() {
    gcs_restore_file "Geany" "geany" "${GEANY_CONFIG_FILE}"
}



function dry_run() {
    printf "* geany: create a new syntax highlighting scheme and set it as default in \"${GEANY_CONFIG_FILE}\".\n"
}



function print_module_help() {
    echo "Help for GCS ${BASH_SOURCE##*/} module"
    echo
    echo "This module sets syntax highlighting and other colors for Geany. This is accomplished by creating a separate theme and modifiying the configuration file, so it is recommended that Geany is not running when this module is used."
    echo
    echo "Backup and restore are supported."
    echo
}



function apply_theme() {
    if [ "${editor_syntax_enable}" == "false" ]; then
        if [ "${GEANY_SYNTAX_FALLBACK}" == "true" ]; then
            printf "* Setting default colors for Geany..."
            local GEANY_TMP_DIR="${GCS_TMP_DIR}/geany"
            local GEANY_TMP_CONFIG_FILE="${GEANY_TMP_DIR}/geany.conf"
            mkdir "${GEANY_TMP_DIR}"
            cp "${GEANY_CONFIG_FILE}" "${GEANY_TMP_CONFIG_FILE}"

            if [[ "$(crudini --get "${GEANY_CONFIG_FILE}" geany color_scheme)" == "gcs"* ]]; then
                set_value "color_scheme" "=" ""                    "${GEANY_TMP_CONFIG_FILE}"
            fi
            set_value "colour_fore"     "=" "${terminal_fg_color}" "${GEANY_TMP_CONFIG_FILE}"
            set_value "colour_back"     "=" "${terminal_bg_color}" "${GEANY_TMP_CONFIG_FILE}"
            set_value "long_line_color" "=" "#C2EBC2"              "${GEANY_TMP_CONFIG_FILE}"

            mv "${GEANY_TMP_CONFIG_FILE}" "${GEANY_CONFIG_FILE}"

            printf " done.\n"

        fi

    else
        printf "* Setting colors for Geany..."
        local GEANY_TEMPLATE_FILE="$(find_module_template "geany-template.conf")"

        if [ -f "${GEANY_TEMPLATE_FILE}" ]; then
            GEANY_COLORSCHEMES_PATH="${HOME}/.config/geany/colorschemes"
            [ -d "${GEANY_COLORSCHEMES_PATH}" ] || mkdir "${GEANY_COLORSCHEMES_PATH}"
            mkdir -p "${GEANY_COLORSCHEMES_PATH}"
            GEANY_THEME_FILE="${GEANY_COLORSCHEMES_PATH}/${FULL_COLOR_THEME_NAME}.conf"
            cp "${GEANY_TEMPLATE_FILE}" "${GEANY_THEME_FILE}"

            set_value "name"                  "=" "GCS ${COLOR_THEME_NAME} theme"                                 "${GEANY_THEME_FILE}"

            set_value "background"            "=" "${geany_bg}"                                                   "${GEANY_THEME_FILE}"
            set_value "foreground"            "=" "${geany_fg}"                                                   "${GEANY_THEME_FILE}"
            set_value "selected_bg"           "=" "${geany_selected_bg}"                                          "${GEANY_THEME_FILE}"
            set_value "selected_fg"           "=" "${geany_selected_fg}"                                          "${GEANY_THEME_FILE}"
            set_value "frame_bg"              "=" "${geany_frame_bg}"                                             "${GEANY_THEME_FILE}"
            set_value "frame_fg"              "=" "${geany_frame_fg}"                                             "${GEANY_THEME_FILE}"

            set_value "current_line"          "=" ";${geany_current_line_bg};true"                                "${GEANY_THEME_FILE}"
            set_value "indent_guide"          "=" "${geany_indent_guide}"                                         "${GEANY_THEME_FILE}"

            set_value "number"                "=" "${geany_number};;true"                                         "${GEANY_THEME_FILE}"
            set_value "class"                 "=" "${geany_class};;true"                                          "${GEANY_THEME_FILE}"
            set_value "string"                "=" "${geany_string}"                                               "${GEANY_THEME_FILE}"
            set_value "operator"              "=" "${geany_operator};;true"                                       "${GEANY_THEME_FILE}"
            set_value "comment"               "=" "${geany_comment}"                                              "${GEANY_THEME_FILE}"
            set_value "error"                 "=" "${geany_error}"                                                "${GEANY_THEME_FILE}"
            set_value "keyword"               "=" "${geany_keyword};;true"                                        "${GEANY_THEME_FILE}"
            set_value "character"             "=" "${geany_character}"                                            "${GEANY_THEME_FILE}"
            set_value "preprocessor"          "=" "${geany_preprocessor}"                                         "${GEANY_THEME_FILE}"
            set_value "brace_good"            "=" "${geany_brace_good};;true"                                     "${GEANY_THEME_FILE}"
            set_value "white_space"           "=" "${geany_white_space};;true"                                    "${GEANY_THEME_FILE}"

            set_value "margin_folding"        "=" "${geany_margin_folding_fg};${geany_margin_folding_bg}"         "${GEANY_THEME_FILE}"
            set_value "fold_symbol_highlight" "=" "${geany_fold_symbol_highlight}"                                "${GEANY_THEME_FILE}"
            set_value "marker_search"         "=" "${geany_marker_search_fg};${geany_marker_search_bg};true;true" "${GEANY_THEME_FILE}"
            set_value "marker_mark"           "=" "${geany_marker_mark_fg};${geany_marker_mark_fg};false;false"   "${GEANY_THEME_FILE}"
            set_value "type"                  "=" "${geany_type};;true"                                           "${GEANY_THEME_FILE}"
            set_value "function"              "=" "${geany_function_fg};${geany_function_bg}"                     "${GEANY_THEME_FILE}"
            set_value "parameter"             "=" "${geany_parameter_fg};${geany_parameter_bg}"                   "${GEANY_THEME_FILE}"
            set_value "here_doc"              "=" "${geany_here_doc_fg};${geany_here_doc_bg}"                     "${GEANY_THEME_FILE}"

            set_value "line_added"            "=" "${geany_diff_added}"                                           "${GEANY_THEME_FILE}"
            set_value "line_removed"          "=" "${geany_diff_removed}"                                         "${GEANY_THEME_FILE}"
            set_value "line_changed"          "=" "${geany_diff_changed}"                                         "${GEANY_THEME_FILE}"

            local GEANY_THEME_SYMLINK="${GEANY_COLORSCHEMES_PATH}/gcs-theme.conf"
            [ -e "${GEANY_THEME_SYMLINK}" ] && rm "${GEANY_THEME_SYMLINK}"
            ln -s "${GEANY_THEME_FILE}" "${GEANY_THEME_SYMLINK}"

            local GEANY_TMP_DIR="${GCS_TMP_DIR}/geany"
            local GEANY_TMP_CONFIG_FILE="${GEANY_TMP_DIR}/geany.conf"
            mkdir "${GEANY_TMP_DIR}"
            cp "${GEANY_CONFIG_FILE}" "${GEANY_TMP_CONFIG_FILE}"

            set_value "color_scheme"    "=" "gcs-theme.conf"             "${GEANY_TMP_CONFIG_FILE}"
            set_value "colour_fore"     "=" "${terminal_fg_color}"       "${GEANY_TMP_CONFIG_FILE}"
            set_value "colour_back"     "=" "${terminal_bg_color}"       "${GEANY_TMP_CONFIG_FILE}"
            set_value "long_line_color" "=" "${editor_long_line_marker}" "${GEANY_TMP_CONFIG_FILE}"

            mv "${GEANY_TMP_CONFIG_FILE}" "${GEANY_CONFIG_FILE}"

            printf " done.\n" 
        else
            printf " error: template file \"${GEANY_TEMPLATE_FILE}\" not found!\n"
        fi

    fi
}

