#!/bin/bash

function dunst_init_module() {
    DUNST_ENABLE_DEFAULT="true"
    DUNST_CONFIG_FILE_DEFAULT="$HOME/.config/dunst/dunstrc"
    DUNST_RESTART_COMMAND_DEFAULT=""

    DUNST_ENABLE="$(crudini          --get ${GCS_CONFIG_FILE} dunst enable          2>/dev/null || echo "${DUNST_ENABLE_DEFAULT}")"
    DUNST_CONFIG_FILE="$(crudini     --get ${GCS_CONFIG_FILE} dunst config_file     2>/dev/null || echo "${DUNST_CONFIG_FILE_DEFAULT}")"
    DUNST_RESTART_COMMAND="$(crudini --get ${GCS_CONFIG_FILE} dunst restart_command 2>/dev/null || echo "${DUNST_RESTART_COMMAND_DEFAULT}")"
}



function dunst_check_dependencies() {
    if ! which dunst >/dev/null; then
        return 1

    elif ! [ "${DUNST_ENABLE}" == "true" ]; then
        printf "* Ignoring dunst (disabled from configuration).\n"
        return 1

    elif ! [ -f "${DUNST_CONFIG_FILE}" ]; then
        printf "* Ignoring dunst (configuration file ${DUNST_CONFIG_FILE} not found).\n"
        return 1

    else
        return 0

    fi
}



function dunst_derive_colors() {
    : ${dunst_frame:=${selected_bg_color}}
    : ${dunst_urgency_low_bg:=${notification_bg_color}}
    : ${dunst_urgency_low_fg:=${notification_fg_color}}
    : ${dunst_urgency_normal_bg:=${selected_bg_color}}
    : ${dunst_urgency_normal_fg:=${selected_fg_color}}
    : ${dunst_urgency_critical_bg:=${titlebar_urgent_bg_color}}
    : ${dunst_urgency_critical_fg:=${selected_fg_color}}
}



function dunst_create_backup() {
    printf "* Making backup of dunst configuration file..."

    DUNST_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/dunst"
    mkdir -p "${DUNST_BACKUP_DIR}"
    cp "${DUNST_CONFIG_FILE}" "${DUNST_BACKUP_DIR}/dunstrc"

    printf " done.\n"
}



function dunst_restore_backup() {
    printf "* Restoring backup of dunst configuration file..."

    DUNST_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/dunst"
    if [ -f "${DUNST_BACKUP_DIR}/dunstrc" ]; then
        cp "${DUNST_BACKUP_DIR}/dunstrc" "${DUNST_CONFIG_FILE}"
        
        $DUNST_RESTART_COMMAND &>/dev/null
        
        printf " done.\n"
    else
        printf " not found!\n"
    fi
}



function dunst_apply_theme() {
    printf "* Setting colors for dunst..."

    DUNST_TMP_DIR="${GCS_TMP_DIR}/dunst"
    DUNST_TMP_CONFIG_FILE="${DUNST_TMP_DIR}/dunstrc"
    mkdir "${DUNST_TMP_DIR}"
    cp "${DUNST_CONFIG_FILE}" "${DUNST_TMP_CONFIG_FILE}"

    set_value_section "frame"            "color"      " = " "\"${dunst_frame}\""               "${DUNST_TMP_CONFIG_FILE}"
    set_value_section "urgency_low"      "background" " = " "\"${dunst_urgency_low_bg}\""      "${DUNST_TMP_CONFIG_FILE}"
    set_value_section "urgency_low"      "foreground" " = " "\"${dunst_urgency_low_fg}\""      "${DUNST_TMP_CONFIG_FILE}"
    set_value_section "urgency_normal"   "background" " = " "\"${dunst_urgency_normal_bg}\""   "${DUNST_TMP_CONFIG_FILE}"
    set_value_section "urgency_normal"   "foreground" " = " "\"${dunst_urgency_normal_fg}\""   "${DUNST_TMP_CONFIG_FILE}"
    set_value_section "urgency_critical" "background" " = " "\"${dunst_urgency_critical_bg}\"" "${DUNST_TMP_CONFIG_FILE}"
    set_value_section "urgency_critical" "foreground" " = " "\"${dunst_urgency_critical_fg}\"" "${DUNST_TMP_CONFIG_FILE}"

    mv "${DUNST_TMP_CONFIG_FILE}" "${DUNST_CONFIG_FILE}"

    $DUNST_RESTART_COMMAND &>/dev/null

    printf " done.\n"
}



dunst_init_module
dunst_check_dependencies
[ $? == 1 ] && return

if [ "${GCS_ACTION}" == "create-backup" ]; then
    dunst_create_backup

elif [ "${GCS_ACTION}" == "restore-backup" ]; then
    dunst_restore_backup

elif [ "${GCS_ACTION}" == "apply-theme" ]; then
    dunst_derive_colors
    dunst_apply_theme

fi

