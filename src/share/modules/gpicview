#!/bin/bash

which gpicview >/dev/null || return

: ${gpicview_bg_color:=${base_color}}
: ${gpicview_bg_full_color:=${base_color}}

GPICVIEW_ENABLE_DEFAULT="true"
GPICVIEW_CONFIG_FILE_DEFAULT="$HOME/.config/gpicview/gpicview.conf"

GPICVIEW_ENABLE="$(crudini      --get ${GCS_CONFIG_FILE} gpicview enable      2>/dev/null || echo "${GPICVIEW_ENABLE_DEFAULT}")"
GPICVIEW_CONFIG_FILE="$(crudini --get ${GCS_CONFIG_FILE} gpicview config_file 2>/dev/null || echo "${GPICVIEW_CONFIG_FILE_DEFAULT}")"

if ! [ "${GPICVIEW_ENABLE}" == "true" ]; then
    printf "* Ignoring gpicview (disabled from configuration).\n"

elif ! [ -f "${GPICVIEW_CONFIG_FILE}" ]; then
    printf "* Ignoring gpicview (configuration file \"${GPICVIEW_CONFIG_FILE}\" not found).\n"

elif [ "${GCS_ACTION}" == "create-backup" ]; then
    printf "* Making backup of gpicview configuration file..."

    GPICVIEW_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/gpicview"
    mkdir -p "${GPICVIEW_BACKUP_DIR}"
    cp "${GPICVIEW_CONFIG_FILE}" "${GPICVIEW_BACKUP_DIR}/gpicview.conf"

    printf " done.\n"

elif [ "${GCS_ACTION}" == "restore-backup" ]; then
    printf "* Restoring backup of gpicview configuration file..."

    GPICVIEW_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/gpicview"
    if [ -f "${GPICVIEW_BACKUP_DIR}/gpicview.conf" ]; then
        cp "${GPICVIEW_BACKUP_DIR}/gpicview.conf" "${GPICVIEW_CONFIG_FILE}"
        printf " done.\n"
    else
        printf " not found!\n"
    fi

elif [ "${GCS_ACTION}" == "apply-theme" ]; then
    printf "* Setting colors for gpicview..."

    GPICVIEW_TMP_DIR="${GCS_TMP_DIR}/gpicview"
    GPICVIEW_TMP_CONFIG_FILE="${GPICVIEW_TMP_DIR}/gpicview.conf"
    mkdir "${GPICVIEW_TMP_DIR}"
    cp "${GPICVIEW_CONFIG_FILE}" "${GPICVIEW_TMP_CONFIG_FILE}"

    set_value "bg"      "=" "${gpicview_bg_color}"      "${GPICVIEW_TMP_CONFIG_FILE}"
    set_value "bg_full" "=" "${gpicview_bg_full_color}" "${GPICVIEW_TMP_CONFIG_FILE}"

    mv "${GPICVIEW_TMP_CONFIG_FILE}" "${GPICVIEW_CONFIG_FILE}"

    printf " done.\n"
fi
