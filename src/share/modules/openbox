#!/bin/bash

function init_module() {
    OPENBOX_ENABLE_DEFAULT="true"
    OPENBOX_CONFIG_FILE_DEFAULT="$HOME/.config/openbox/rc.xml"
    OPENBOX_RESTART_COMMAND_DEFAULT="openbox --reconfigure"

    OPENBOX_ENABLE="$(crudini          --get ${GCS_CONFIG_FILE} openbox enable          2>/dev/null || echo "${OPENBOX_ENABLE_DEFAULT}")"
    OPENBOX_CONFIG_FILE="$(crudini     --get ${GCS_CONFIG_FILE} openbox config_file     2>/dev/null || echo "${OPENBOX_CONFIG_FILE_DEFAULT}")"
    OPENBOX_RESTART_COMMAND="$(crudini --get ${GCS_CONFIG_FILE} openbox restart_command 2>/dev/null || echo "${OPENBOX_RESTART_COMMAND_DEFAULT}")"

    OPENBOX_NAMESPACE="http://openbox.org/3.4/rc"
    OPENBOX_THEME_NAME_PATH="/o:openbox_config/o:theme/o:name"
    OPENBOX_THEME_FILE="${HOME}/.themes/${FULL_COLOR_THEME_NAME}/openbox-3/themerc"
}



function check_dependencies() {
    if ! which openbox >/dev/null; then
        return 1

    elif ! which pgrep >/dev/null; then
        return 1

    elif ! [ "${OPENBOX_ENABLE}" == "true" ]; then
        printf "* Ignoring openbox (disabled from configuration).\n"
        return 1

    elif ! [ -f "${OPENBOX_CONFIG_FILE}" ]; then
        printf "* Ignoring openbox (configuration file ${OPENBOX_CONFIG_FILE} not found).\n"
        return 1

    else
        return 0

    fi
}



function derive_colors() {
    : ${openbox_window_active_title_bg_color:=${titlebar_focused_bg_color}}
    : ${openbox_window_active_label_text_color:=${titlebar_focused_fg_color}}
    : ${openbox_window_inactive_title_bg_color:=${titlebar_unfocused_bg_color}}
    : ${openbox_window_inactive_label_text_color:=${titlebar_unfocused_fg_color}}

    : ${openbox_window_active_button_unpressed_image_color:=${titlebar_focused_fg_color}}
    : ${openbox_window_active_button_pressed_bg_color:=${titlebar_focused_fg_color}}
    : ${openbox_window_active_button_pressed_image_color:=${titlebar_focused_bg_color}}
    : ${openbox_window_active_button_toggled_bg_color:=${titlebar_focused_fg_color}}
    : ${openbox_window_active_button_toggled_image_color:=${titlebar_focused_bg_color}}

    : ${openbox_window_inactive_button_unpressed_bg_color:=${titlebar_unfocused_bg_color}}
    : ${openbox_window_inactive_button_pressed_bg_color:=${titlebar_unfocused_fg_color}}
    : ${openbox_window_inactive_button_pressed_image_color:=${titlebar_unfocused_bg_color}}

    : ${openbox_menu_separator_color:=${text_color}}
    : ${openbox_menu_items_active_text_color:=${selected_fg_color}}
}



function create_backup() {
    printf "* Making backup of openbox configuration file..."

    OPENBOX_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/openbox"
    mkdir -p "${OPENBOX_BACKUP_DIR}"
    cp "${OPENBOX_CONFIG_FILE}" "${OPENBOX_BACKUP_DIR}/rc.xml"

    printf " done.\n"
}



function restore_backup() {
    printf "* Restoring backup of openbox configuration file..."

    OPENBOX_BACKUP_DIR="${GCS_BACKUPS_DIR}/${GCS_BACKUP_NAME}/openbox"
    if [ -f "${OPENBOX_BACKUP_DIR}/rc.xml" ]; then
        cp "${OPENBOX_BACKUP_DIR}/rc.xml" "${OPENBOX_CONFIG_FILE}"

        $OPENBOX_RESTART_COMMAND &>/dev/null

        printf " done.\n"
    else
        printf " not found!\n"
    fi
}



function apply_theme() {
    if ! pgrep openbox &>/dev/null; then
        printf "* Not setting colors for openbox (not active).\n"

    else
        printf "* Setting colors for openbox..."

        set_value "window.active.title.bg.color:" " " "${openbox_window_active_title_bg_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.active.label.text.color:" " " "${openbox_window_active_label_text_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.inactive.title.bg.color:" " " "${openbox_window_inactive_title_bg_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.inactive.label.text.color:" " " "${openbox_window_inactive_label_text_color}" "${OPENBOX_THEME_FILE}"

        set_value "window.active.button.unpressed.image.color:" " " "${openbox_window_active_button_unpressed_image_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.active.button.pressed.image.color:" " " "${openbox_window_active_button_pressed_image_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.active.button.pressed.bg.color:" " " "${openbox_window_active_button_pressed_bg_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.active.button.toggled.bg:" " " "flat solid" "${OPENBOX_THEME_FILE}"
        set_value "window.active.button.toggled.bg.color:" " " "${openbox_window_active_button_toggled_bg_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.active.button.toggled.image.color:" " " "${openbox_window_active_button_toggled_image_color}" "${OPENBOX_THEME_FILE}"

        set_value "window.inactive.button.unpressed.bg.color:" " " "${openbox_window_inactive_button_unpressed_bg_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.inactive.button.pressed.bg.color:" " " "${openbox_window_inactive_button_pressed_bg_color}" "${OPENBOX_THEME_FILE}"
        set_value "window.inactive.button.pressed.image.color:" " " "${openbox_window_inactive_button_pressed_image_color}" "${OPENBOX_THEME_FILE}"

        set_value "menu.separator.color:" " " "${openbox_menu_separator_color}" "${OPENBOX_THEME_FILE}"
        set_value "menu.items.active.text.color:" " " "${openbox_menu_items_active_text_color}" "${OPENBOX_THEME_FILE}"

        xmlstarlet ed --inplace -N o="${OPENBOX_NAMESPACE}" --update "${OPENBOX_THEME_NAME_PATH}" --value "${FULL_COLOR_THEME_NAME}" "${OPENBOX_CONFIG_FILE}"

        $OPENBOX_RESTART_COMMAND &>/dev/null

        printf " done.\n"
    fi
}

